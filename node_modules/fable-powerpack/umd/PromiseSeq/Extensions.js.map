{"version":3,"sources":["../../../src/PromiseSeq/Extensions.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAYM,wCAAa,+BAAb;;AAKA;AAAA;;AAAA,oBAAkB;AAAA,qCAEgB,uBAFhB;AAAA;AAAA;AAAA,KAAlB;AAE8D","file":"Extensions.js","sourcesContent":["// ----------------------------------------------------------------------------\n// F# promise extensions (PromiseSeq.fs)\n// (c) Tomas Petricek, 2011, Available under Apache 2.0 license.\n// ----------------------------------------------------------------------------\nnamespace Fable.PowerPack\n\nopen Fable.Import\n\n[<AutoOpen>]\nmodule PromiseSeqExtensions =\n\n  /// Builds an asynchronou sequence using the computation builder syntax\n  let promiseSeq = new PromiseSeq.PromiseSeqBuilder()\n\n  // Add asynchronous for loop to the 'promise' computation builder\n  type Promise.PromiseBuilder with\n    member x.For (seq:PromiseSeq<'T>, action:'T -> JS.Promise<unit>) =\n      promise.Bind(seq, function\n        | Nil -> promise.Zero()\n        | Cons(h, t) -> promise.Combine(action h, x.For(t, action)))"]}